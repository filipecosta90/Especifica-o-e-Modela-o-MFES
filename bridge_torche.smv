MODULE pessoa ( tempo, tocha , ninguem_ponte ,   travessia_completa )

  VAR
  posicao : { lado_esquerdo , atravessar, retornar, lado_direito };
  
  n_t: 0..3;
INIT
posicao = lado_esquerdo &  n_t = 0;

DEFINE
em_travessia := posicao = atravessar ? 1 : 0  ;
esta_lado_esq := posicao = lado_esquerdo ? 1 : 0 ;
em_retorno := posicao = retornar ? 1 : 0 ;
tempo_travessia := tempo;

TRANS
( posicao = lado_esquerdo & ninguem_ponte & tocha = lado_esquerdo & n_t = 0 ) 
-> (( next(posicao) = posicao & next (n_t) = n_t ) | (next(posicao)=atravessar  & next (n_t) = 1 ) );

TRANS
( posicao = atravessar & n_t = 1  ) -> ( next(posicao) = lado_direito & next ( n_t ) = 2 );

TRANS
( posicao = lado_direito & tocha= lado_direito & ninguem_ponte & n_t = 2 & !travessia_completa  ) 
-> ( (next(posicao)= retornar & next(n_t)=3  ) |  ( next(n_t) = n_t & next(posicao)=posicao ) );

TRANS
( posicao = retornar & n_t = 3) -> ( next (n_t) = 0 & next(posicao) = lado_esquerdo );

MODULE main

VAR
tocha : { lado_esquerdo , na_ponte , lado_direito };
pA : pessoa( 1, tocha , ninguem_ponte , travessia_completa );
pB : pessoa( 2, tocha , ninguem_ponte , travessia_completa );
pC : pessoa( 4, tocha , ninguem_ponte , travessia_completa );
pD : pessoa( 8, tocha , ninguem_ponte , travessia_completa );

DEFINE
  ninguem_ponte:= pessoas_atravessar = 0 & pessoas_retornar = 0;

  pessoas_atravessar := pA.em_travessia + pB.em_travessia + pC.em_travessia + pD.em_travessia;

  pessoas_retornar := pA.em_retorno + pB.em_retorno + pC.em_retorno + pD.em_retorno;

  pessoas_lado_esquerdo := pA.esta_lado_esq + pB.esta_lado_esq + pC.esta_lado_esq + pD.esta_lado_esq;

  travessia_completa:= pA.posicao = lado_direito & pB.posicao = lado_direito & pC.posicao = lado_direito & pD.posicao = lado_direito;

INVAR
pessoas_atravessar <= 2;

INVAR
pessoas_retornar <= 1;

INIT
tocha = lado_esquerdo & pessoas_atravessar = 0;

TRANS
 ( pessoas_atravessar = 1 ) -> ( pessoas_lado_esquerdo = 0 );

TRANS 
( pessoas_atravessar > 0 ) -> ( pessoas_retornar = 0 & tocha = na_ponte );

TRANS 
( pessoas_retornar > 0 ) -> ( pessoas_atravessar = 0 & tocha = na_ponte ) ;


--TRANS
--  ( tocha = lado_direito & pode_avancar & ! travessia_completa ) -> ( next(tocha) = lado_esquerdo );
--TRANS
--  ( tocha = lado_direito & travessia_completa ) -> ( next(tocha)=lado_direito );

 LTLSPEC
G (( pessoas_atravessar = 0 & pessoas_retornar = 0 ) ->  F travessia_completa );
